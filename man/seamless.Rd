% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/seamless.R
\name{seamless}
\alias{seamless}
\alias{is_seamless}
\title{is_seamless, seamless}
\usage{
is_seamless(d, begin = begin, end = end)

seamless(d, begin = begin, end = end)
}
\arguments{
\item{d}{table}

\item{begin}{\code{tidyr} selector specifying column containing \emph{begin} timepoints}

\item{end}{\code{tidyr} selector specifying column containing \emph{end} timeponts}
}
\value{
\code{is_seamless} returns a logical stating whether history is seamless or not

\code{seamless} returns a \code{tibble} that is seamless, i.e. satisfies \code{is_seamless}
}
\description{
\code{is_seamless} checks if a given history (i.e. a succession of intervals) is
seamless, i.e. \emph{stop} timepoints of preceding coincide with \emph{start} timepoints of
succeeding intervals. Conversion of a not seamless into a seamless history can be attempted with
\code{seamless}.
}
\examples{
# set seed to make it reproducible
set.seed(3)
# generate random numbers between 0 and 1e6
rn <- runif(5, 0, 1e6)
# generate intervals in seconds
ir <- rn + runif(5, 0, 1e6)
# generate random history `hx` (table)
hx <- data.frame(unit = sample(letters[1:3], 5, TRUE),
begin = as.POSIXlt(rn, origin = "2021-01-01 00:00:00"),
end = as.POSIXlt(ir, origin = "2021-01-01 00:00:00"))
# hx is expected to not be seamless
is_seamless(hx) # returns FALSE

# hx can, however, be converted
\dontrun{
sl_hx <- seamless(hx)
is_seamless(sl_hx) # returns TRUE
}
}
