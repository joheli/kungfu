% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/postgresql_uploader.R
\name{postgresql_uploader}
\alias{postgresql_uploader}
\alias{killConnections}
\title{postgresql_uploader}
\usage{
postgresql_uploader(
  con,
  r_df,
  pg_table = deparse(substitute(r_df)),
  unique.field.names,
  update = TRUE,
  clean_r_df = TRUE
)

killConnections()
}
\arguments{
\item{con}{a \code{DBI::DBIConnection} object created with \link[RPostgreSQL]{dbConnect}.}

\item{r_df}{data.frame to be uploaded; must contain identical column names to \code{pg_table}.}

\item{pg_table}{character specifying existing PostgreSQL table name; the referred table on the
PostgreSQL backend must have the same column names as \code{r_df}; \code{pg_table} defaults to name of object passed
as \code{r_df} (i.e. \code{deparse(substitute(r_df))}).}

\item{unique.field.names}{character specifying unique column names as defined in PostgreSQL table constraints
(i.e. primary key); please note, that column names of \code{r_df} and \code{pg_table} must be identical!}

\item{update}{logical, specifying whether to update existing entries as defined by \code{unique.field.names};
defaults to \code{TRUE}.}

\item{clean_r_df}{logical, specifying whether to clean \code{r_df} with function \link[kungfu]{cleaner},
if duplicates are found; defaults to \code{TRUE}, as the PostgreSQL backend will terminate the upload with an
error if primary key constraints are violated.}
}
\value{
\code{postgresql_uploader} returns a \code{list} with information about effected inserts and updates

\code{killConnections} has no return; its side effect is described above
}
\description{
\code{postgresql_uploader} is a convenience function to upload contents of a \code{data.frame}
object into an exsisting PostgreSQL table. The table must first be created on the PostgreSQL
backend (via "\verb{CREATE TABLE ...}") before \code{postgresql_uploader} is used.

\code{killConnections} disconnects all PostgreSQL connections.
}
\seealso{
\link[RPostgreSQL]{dbConnect}
}
