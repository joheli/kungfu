% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/pattern_join.R
\name{pattern_join}
\alias{pattern_join}
\title{pattern_join}
\usage{
pattern_join(x, y, by)
}
\arguments{
\item{x}{data.frame}

\item{y}{data.frame containing a column with regex patterns}

\item{by}{character of length 1, specifying either names of corresponding field names in a
named (e.g. \code{c("field name in data.frame x" = "field name containing patterns in data.frame y")}) or
unnamed (e.g. \code{"field name in both x and y"}; here, both \code{x} and \code{y} contain the same column name) character.}
}
\value{
data.frame of merged \code{x} and \code{y} based on found similarities columns specified by \code{by}
}
\description{
Function to join two \code{data.frame} objects based on regex patterns. Unique patterns are supplied in
the second \code{data.frame} object.
}
\examples{
# set seed to make it reproducible
set.seed(1)
# extract twenty rows of nycflights13::planes
airplanes <- nycflights13::planes \%>\% slice(sample(1:nrow(nycflights13::planes), 20))
# model_type is really just a stupid pattern map, please don't pay attention to the content; notice
# that pattern ".*" is a catchall for those entries in 'x' that don't have a better match in 'y'
model_type <- tibble(pattern = c("PA-32", "EMB-145", "7[2-8]7", "A320", ".*"),
                     model_type = c("Piper 32", "Embraer 145", "Boeing 7X7", "Airbus 320", "no clue at all!"))
# pattern_join 'airplanes' with 'model_type' by columns 'model' and 'pattern'
airplanes_model_type <- pattern_join(airplanes, model_type, c("model" = "pattern"))
}
