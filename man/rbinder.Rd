% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/rbinder.R
\name{rbinder}
\alias{rbinder}
\title{rbinder}
\usage{
rbinder(
  file.pattern,
  readf = read.csv2,
  path = ".",
  unique.field.name,
  result = c("default", "debug"),
  ...
)
}
\arguments{
\item{file.pattern}{character; specifies regex pattern of file names to be processed.}

\item{readf}{function; specifies function (which has to return a \code{data.frame}) used for reading in of data
(defaults to \code{read.csv2})}

\item{path}{character; specifies directory from which to collect files corresponding to \code{file.pattern}
(defaults to ".").}

\item{unique.field.name}{character; column names designating unique entries that are not to be duplicated
after uniting of files; use to avoid duplicates introduced by reading in of files with same content.}

\item{result}{character; only used for debugging (in that case, pass "debug").}

\item{...}{arguments passed to function \code{readf}.}
}
\value{
a united \code{data.frame} with unique entries not duplicated despite possible multiple occurrence in files
}
\description{
Batch read and unite multiple data files into a single \code{data.frame}.
}
\examples{
# - Folder 'extdata' (system.file("extdata", package = "kungfu") contains three csv-files:
#> dir(system.file("extdata", package = "kungfu"), pattern = "csv")
#[1] "data01.csv" "data02.csv" "data03.csv"
#
# - To join them, run:
data_combined <- rbinder("^data", read.csv, path = system.file("extdata", package = "kungfu"), unique.field.name = "id")
#
# - You can also create your own custom "dirty reader" and supply that to "rbinder"
# - (Please see "?df_pattern_subset" for information regarding that function)
# - e.g.:
# my_dirty_excel_reader <- function(path) {
#    read_xlsx(path) \%>\%
#    df_pattern_subset("^mySpecial.*Pattern$", ignore_columns = TRUE) \%>\%
#    select(id, size, -timestamp, etc, anothercolumn)
# }
}
\seealso{
\code{\link[=df_pattern_subset]{df_pattern_subset()}} for subsetting a \code{data.frame}, useful for creating custom readers, see examples
}
